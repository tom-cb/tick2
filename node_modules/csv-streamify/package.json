{
  "name": "csv-streamify",
  "version": "1.0.0",
  "description": "Streaming CSV Parser. Made entirely out of streams.",
  "author": {
    "name": "Clemens Stolle"
  },
  "main": "csv-streamify.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "./node_modules/.bin/mocha -R spec"
  },
  "bin": {
    "csv-streamify": "cli.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/klaemo/csv-stream"
  },
  "keywords": [
    "csv",
    "parser",
    "stream",
    "cli"
  ],
  "license": "BSD",
  "dependencies": {
    "readable-stream": "1.1.x"
  },
  "devDependencies": {
    "mocha": "1.14.x",
    "iconv-lite": "~0.2.11",
    "csv-spectrum": "~0.2.0"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "readme": "csv-streamify [![Build Status](https://travis-ci.org/klaemo/csv-stream.png)](https://travis-ci.org/klaemo/csv-stream)\n===\n\nParses csv files. Accepts options. Handles weird encodings. No coffee script, no weird APIs. Just streams. Tested against [csv-spectrum](https://github.com/maxogden/csv-spectrum) and used in production.\n\n## Installation\n\n```\nnpm install csv-streamify\n```\n\n## Usage\n\nThis module implements a simple node 0.10.x [stream.Transform](http://nodejs.org/api/stream.html#stream_class_stream_transform) stream.\n\n__Note:__ csv-streamify pulls in the ```readable-stream``` module, so it also works on node 0.8\n\n```javascript\nvar csv = require('csv-streamify'),\n    fs = require('fs')\n\nvar fstream = fs.createReadStream('/path/to/file'),\n    parser = csv(options /* optional */, callback /* optional */)\n\n// emits each line as a buffer or as a string representing an array of fields\nparser.on('readable', function () {\n  var line = parser.read()\n  // do stuff with data as it comes in\n\n  // current line number\n  console.log(parser.lineNo)\n})\n\n// AND/OR\nfunction callback(err, doc) {\n  if (err) return handleErrorGracefully(err)\n\n  // doc is an array of row arrays\n  doc.forEach(function (row) { console.log(row) })\n}\n\n// now pump some data into it (and pipe it somewhere else)\nfstream.pipe(parser).pipe(nirvana)\n\n```\n__Note:__ If you pass a callback to ```csv-streamify``` it will buffer the parsed data for you and pass it to the callback when it's done. This behaviour can obviously lead to out of memory errors with very large csv files.\n\n### Options\n\nYou can pass some options to the parser. **All of them are optional**.\n\nThe options are also passed to the underlying transform stream, so you can pass in any standard node core stream options.\n\n```javascript\n{\n  delimiter: ',', // comma, semicolon, whatever\n  newline: '\\n', // newline character (use \\r\\n for CRLF files)\n  quote: '\"', // what's considered a quote\n  empty: '', // empty fields are replaced by this,\n  \n  // specify the encoding of the source if it's something other than utf8\n  inputEncoding: '',\n\n  // if true, emit arrays instead of stringified arrays or buffers\n  objectMode: false,\n\n  // if set to true, uses first row as keys -> [ { column1: value1, column2: value2 }, ...]\n  columns: false\n}\n```\n\nIn order for the inputEncoding option to take effect you need to install [iconv-lite](https://github.com/ashtuchkin/iconv-lite) (`npm install iconv-lite --save`).\nAlso, take a look at the iconv-lite documentation for supported encodings.\n(iconv-lite provides pure javascript character encoding conversion -> no native code compilation)\n\n## CLI\n\nTo use on the command line install it globally:\n\n```bash\n$ npm install csv-streamify -g\n```\n\nThis should add the `csv-streamify` command to your `$PATH`.\n\nThen, you either pipe data into it or give it a filename:\n\n```bash\n# pipe data in\n$ cat some_data.csv | csv-streamify\n# pass a filename\n$ csv-streamify some_data.csv > output.json\n# tell csv-streamify to read from + wait on stdin\n$ csv-streamify -\n```\n\n## Wishlist\n\n- browser support\n\nIf you would like to contribute either of those just open an issue so we can discuss it further. :)\n\n## Contributors\n\n[Nicolas Hery](https://github.com/nicolashery) (objectMode)\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/klaemo/csv-stream/issues"
  },
  "homepage": "https://github.com/klaemo/csv-stream",
  "_id": "csv-streamify@1.0.0",
  "dist": {
    "shasum": "023aec7d5cd0c4c88cca69d9c2bab17a1253fa33"
  },
  "_from": "csv-streamify@",
  "_resolved": "https://registry.npmjs.org/csv-streamify/-/csv-streamify-1.0.0.tgz"
}
